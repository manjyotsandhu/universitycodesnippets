<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="en">
<head>
<!-- Generated by javadoc (1.8.0_101) on Mon Oct 17 12:23:13 BST 2016 -->
<title>Uses of Class zbvc.cs2800.BadType</title>
<meta name="date" content="2016-10-17">
<link rel="stylesheet" type="text/css" href="../../../stylesheet.css" title="Style">
<script type="text/javascript" src="../../../script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Uses of Class zbvc.cs2800.BadType";
        }
    }
    catch(err) {
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../zbvc/cs2800/package-summary.html">Package</a></li>
<li><a href="../../../zbvc/cs2800/BadType.html" title="class in zbvc.cs2800">Class</a></li>
<li class="navBarCell1Rev">Use</li>
<li><a href="../package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev</li>
<li>Next</li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?zbvc/cs2800/class-use/BadType.html" target="_top">Frames</a></li>
<li><a href="BadType.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="header">
<h2 title="Uses of Class zbvc.cs2800.BadType" class="title">Uses of Class<br>zbvc.cs2800.BadType</h2>
</div>
<div class="classUseContainer">
<ul class="blockList">
<li class="blockList">
<ul class="blockList">
<li class="blockList"><a name="zbvc.cs2800">
<!--   -->
</a>
<h3>Uses of <a href="../../../zbvc/cs2800/BadType.html" title="class in zbvc.cs2800">BadType</a> in <a href="../../../zbvc/cs2800/package-summary.html">zbvc.cs2800</a></h3>
<table class="useSummary" border="0" cellpadding="3" cellspacing="0" summary="Use table, listing methods, and an explanation">
<caption><span>Methods in <a href="../../../zbvc/cs2800/package-summary.html">zbvc.cs2800</a> that throw <a href="../../../zbvc/cs2800/BadType.html" title="class in zbvc.cs2800">BadType</a></span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colLast" scope="col">Method and Description</th>
</tr>
<tbody>
<tr class="altColor">
<td class="colFirst"><code>boolean</code></td>
<td class="colLast"><span class="typeNameLabel">Entry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/Entry.html#equals-zbvc.cs2800.Entry-">equals</a></span>(<a href="../../../zbvc/cs2800/Entry.html" title="class in zbvc.cs2800">Entry</a>&nbsp;first)</code>
<div class="block">If an entry and this object are of same type and contents, method will
 return true.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#equalsMethodComparesDifferentTypeAndSymbolAndReturnsResult--">equalsMethodComparesDifferentTypeAndSymbolAndReturnsResult</a></span>()</code>
<div class="block">Tests if equals method returns false for two objects of same type, but
 different contents.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#equalsMethodComparesTypeAndReturnResult--">equalsMethodComparesTypeAndReturnResult</a></span>()</code>
<div class="block">Tests if equals method returns false for two objects that are of different
 type.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#equalsMethodReturnsFalseForDifferentFloats--">equalsMethodReturnsFalseForDifferentFloats</a></span>()</code>
<div class="block">Tests if equals method returns false for two objects of float type and
 different contents.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#equalsMethodReturnsTrue--">equalsMethodReturnsTrue</a></span>()</code>
<div class="block">Tests if equals method returns true for two different objects, of same
 type.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#equalsMethodReturnsTrueForDifferentString--">equalsMethodReturnsTrueForDifferentString</a></span>()</code>
<div class="block">Tests if equals method returns false for two objects of String type and
 different contents.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#equalsMethodReturnsTrueForSameFloat--">equalsMethodReturnsTrueForSameFloat</a></span>()</code>
<div class="block">Tests if equals method returns true for two objects of float type and same
 contents</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#equalsMethodReturnsTrueForSameString--">equalsMethodReturnsTrueForSameString</a></span>()</code>
<div class="block">Tests if equals method returns true for two objects of String type and same
 contents.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#equalsMethodReturnsTrueForSameSymbol--">equalsMethodReturnsTrueForSameSymbol</a></span>()</code>
<div class="block">Tests if equals method returns true for two objects of Symbol type and same
 contents.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#floatEntryAndGetStringBadType--">floatEntryAndGetStringBadType</a></span>()</code>
<div class="block">Tests if a bad type exception is thrown if a get string method is called
 for an entry constructed with a float.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#floatEntryAndGetSymbolBadType--">floatEntryAndGetSymbolBadType</a></span>()</code>
<div class="block">Tests if a bad type exception is thrown if get symbol method is called for
 an entry constructed with a float.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<td class="colLast"><span class="typeNameLabel">Entry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/Entry.html#getString--">getString</a></span>()</code>
<div class="block">Method used to return the string variable for this object.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code><a href="../../../zbvc/cs2800/Symbol.html" title="enum in zbvc.cs2800">Symbol</a></code></td>
<td class="colLast"><span class="typeNameLabel">Entry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/Entry.html#getSymbol--">getSymbol</a></span>()</code>
<div class="block">Method used to return the symbol enumeration for this object.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>float</code></td>
<td class="colLast"><span class="typeNameLabel">Entry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/Entry.html#getValue--">getValue</a></span>()</code>
<div class="block">Method used to return the float value for this object.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#setUpConstructorAndGetString--">setUpConstructorAndGetString</a></span>()</code>
<div class="block">Tests if constructor and get symbol method returns the correct string.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#setUpConstructorAndGetSymbol--">setUpConstructorAndGetSymbol</a></span>()</code>
<div class="block">Tests if constructor and get symbol method returns the correct symbol.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#setUpConstructorAndGetValue--">setUpConstructorAndGetValue</a></span>()</code>
<div class="block">Tests if constructor and get value method returns the correct float.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#setUpFloatConstructorTest--">setUpFloatConstructorTest</a></span>()</code>&nbsp;</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#setUpStringConstructorTest--">setUpStringConstructorTest</a></span>()</code>
<div class="block">Tests a set string is returned from the constructor.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#setUpSymbolConstructorTest--">setUpSymbolConstructorTest</a></span>()</code>
<div class="block">Tests a set symbol is returned from the constructor.</div>
</td>
</tr>
<tr class="altColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">TestEntry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/TestEntry.html#stringEntryAndGetValueBadType--">stringEntryAndGetValueBadType</a></span>()</code>
<div class="block">Tests if a bad type exception is thrown if a get value method is called for
 an entry constructed with a string.</div>
</td>
</tr>
<tr class="rowColor">
<td class="colFirst"><code>void</code></td>
<td class="colLast"><span class="typeNameLabel">Entry.</span><code><span class="memberNameLink"><a href="../../../zbvc/cs2800/Entry.html#throwException-zbvc.cs2800.Type-">throwException</a></span>(<a href="../../../zbvc/cs2800/Type.html" title="enum in zbvc.cs2800">Type</a>&nbsp;typeOfEntry)</code>
<div class="block">Takes parameter of type (@link Type) and throws exception if it does not
 match type of this object.</div>
</td>
</tr>
</tbody>
</table>
</li>
</ul>
</li>
</ul>
</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../../../zbvc/cs2800/package-summary.html">Package</a></li>
<li><a href="../../../zbvc/cs2800/BadType.html" title="class in zbvc.cs2800">Class</a></li>
<li class="navBarCell1Rev">Use</li>
<li><a href="../package-tree.html">Tree</a></li>
<li><a href="../../../deprecated-list.html">Deprecated</a></li>
<li><a href="../../../index-files/index-1.html">Index</a></li>
<li><a href="../../../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev</li>
<li>Next</li>
</ul>
<ul class="navList">
<li><a href="../../../index.html?zbvc/cs2800/class-use/BadType.html" target="_top">Frames</a></li>
<li><a href="BadType.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../../../allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
